services:
  dang-db:
    platform: linux/x86_64
    image: postgres:17.0-alpine3.20
    container_name: dang-db
    ports:
      - 5433:5432
    volumes:
      - ./.tmp/db:/var/lib/postgresql/data
      - ./dbs/:/docker-entrypoint-initdb.d/
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: xFXUbRKv3BSDMIb
    networks:
      - dang-network

  dang-es:
    # platform: linux/x86_64
    image: elasticsearch:8.17.0
    container_name: dang-es
    ports:
      - 9200:9200
    volumes:
      - ./.tmp/es:/usr/share/elasticsearch/data
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - node.name=dang-es-01
      - cluster.name=dang-es-local
      - network.host=0.0.0.0
      # - bootstrap.system_call_filter=false
      # - client.transport.sniff=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      dang-network:
        ipv4_address: 10.1.10.1

  dang-kafka:
    platform: linux/x86_64
    image: bitnami/kafka:3.9.0
    container_name: dang-kafka
    ports:
      - 9094:9094
    volumes:
      - ./.tmp/kafka:/bitnami/kafka
    environment:
      # KRaft settings
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@dang-kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    networks:
      - dang-network
  dev-kafdrop:
    platform: linux/x86_64
    image: obsidiandynamics/kafdrop
    container_name: dev-kafdrop
    ports:
      - 9000:9000
    environment:
      - KAFKA_BROKERCONNECT=dang-kafka:9092
    depends_on:
      - dang-kafka
    networks:
      - dang-network

  dang-redis:
    platform: linux/x86_64
    container_name: dang-redis
    image: bitnami/redis:7.4
    ports:
      - 6379:6379
    volumes:
      - ./.tmp/redis:/bitnami/redis/data
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    networks:
      - dang-network
  dev-redisinsight:
    platform: linux/x86_64
    image: redis/redisinsight:latest
    container_name: dev-redisinsight
    ports:
      - 5540:5540
    volumes:
      - ./.tmp/redisinsight:/data
    networks:
      - dang-network

  dang-minio:
    platform: linux/x86_64
    image: minio/minio:RELEASE.2024-12-18T13-15-44Z
    container_name: dang-minio
    command: server /data --console-address ":9091" --address ":9090"
    ports:
      - 9090:9090
      - 9091:9091
    volumes:
      - ./.tmp/minio:/data
    environment:
      MINIO_ROOT_USER: dang-minioMINIO_ROOT_PASSWORD:dang-minio
    deploy:
      resources:
        limits:
          memory: 256m
    networks:
      - dang-network

networks:
  dang-network:
    driver: bridge
    ipam:
      config:
        - subnet: 10.1.0.0/16
          gateway: 10.1.0.1
