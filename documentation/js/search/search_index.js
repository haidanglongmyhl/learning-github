var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,0.98,1,1.858]],["body/controllers/AppController.html",[0,1.537,1,2.916,2,1.349,3,0.488,4,0.42,5,0.42,6,3.073,7,0.717,8,2.085,9,4.452,10,1.492,11,0.039,12,0.994,13,3.732,14,1.654,15,1.537,16,0.615,17,0.895,18,2.538,19,3.073,20,0.488,21,0.024,22,2.314,23,1.839,24,1.654,25,3.732,26,0.03,27,0.03]],["title/modules/AppModule.html",[28,1.083,29,1.858]],["body/modules/AppModule.html",[1,2.879,2,1.479,3,0.395,4,0.34,5,0.34,11,0.039,16,0.702,17,0.724,18,2.645,19,2.484,20,0.395,21,0.02,26,0.026,27,0.026,28,1.678,29,3.609,30,1.337,31,1.337,32,1.661,33,1.661,34,1.337,35,2.557,36,1.661,37,2.484,38,2.484,39,2.484,40,2.645,41,2.955,42,2.379,43,2.253,44,1.661,45,1.487,46,3.017,47,2.537,48,3.017,49,3.017,50,3.017,51,3.017]],["title/injectables/AppService.html",[18,1.477,52,1.083]],["body/injectables/AppService.html",[3,0.514,4,0.442,5,0.442,7,0.754,8,2.153,9,4.534,11,0.038,12,1.047,14,1.741,15,1.587,16,0.514,17,0.942,18,2.393,20,0.514,21,0.025,24,1.741,26,0.031,27,0.031,52,1.755,53,2.163,54,3.235,55,3.929,56,3.929,57,2.777]],["title/controllers/AuthController.html",[0,0.98,58,1.858]],["body/controllers/AuthController.html",[0,1.322,2,1.462,3,0.529,4,0.456,5,0.456,11,0.039,16,0.647,17,0.97,20,0.529,21,0.026,22,2.508,23,1.993,26,0.032,27,0.032,58,3.066,59,3.331,60,2.86,61,4.046,62,2.367,63,3.331,64,4.046]],["title/modules/AuthModule.html",[28,1.083,40,1.477]],["body/modules/AuthModule.html",[2,1.561,3,0.428,4,0.368,5,0.368,11,0.039,16,0.673,17,0.784,20,0.428,21,0.021,26,0.028,27,0.028,28,1.748,30,1.449,31,1.449,32,1.8,33,1.8,34,1.449,35,2.662,36,2.662,40,2.76,42,1.914,43,2.378,44,1.8,45,1.611,47,2.027,58,2.998,62,2.612,63,2.692,65,2.692,66,2.692,67,2.692,68,3.27,69,2.678,70,3.27,71,2.692]],["title/injectables/AuthService.html",[52,1.083,62,1.329]],["body/injectables/AuthService.html",[3,0.383,4,0.33,5,0.33,7,0.563,8,1.778,11,0.039,12,1.219,14,1.778,15,1.86,16,0.525,17,0.703,20,0.383,21,0.019,23,1.444,24,1.778,26,0.026,27,0.026,52,1.45,53,1.613,62,1.778,69,1.817,72,2.413,73,2.929,74,4.92,75,4.012,76,2.836,77,2.413,78,2.061,79,2.931,80,2.209,81,2.209,82,1.185,83,1.604,84,2.836,85,2.931,86,2.931,87,4.012,88,3.767,89,2.836,90,2.931,91,2.072,92,2.072,93,2.413,94,2.931,95,2.413,96,2.413,97,1.613,98,2.931,99,2.931,100,2.413]],["title/classes/CreatePostDto.html",[21,0.019,101,1.477]],["body/classes/CreatePostDto.html",[3,0.158,4,0.136,5,0.136,7,0.232,10,1.782,11,0.039,12,1.187,15,1.592,16,0.486,20,0.158,21,0.017,26,0.013,27,0.013,57,0.853,82,1.518,83,1.914,100,2.824,101,1,102,0.535,103,3.238,104,0.853,105,1.163,106,2.627,107,2.161,108,2.533,109,2.931,110,2.161,111,2.161,112,2.824,113,1.855,114,2.824,115,2.792,116,2.824,117,1.914,118,3.219,119,1.207,120,1.207,121,2.029,122,2.029,123,3.414,124,1.207,125,1.207,126,2.127,127,1.207,128,3.077,129,1.671,130,1.671,131,2.029,132,1.207,133,1.207,134,1.207,135,2.029,136,1.949,137,2.533,138,3.077,139,2.029,140,1.434,141,1.207,142,1.207,143,2.533,144,2.161,145,2.029,146,2.029,147,1.207,148,1.207,149,2.029,150,2.029,151,2.625,152,2.029,153,2.029,154,2.029,155,2.029,156,1.207,157,1.207,158,1.207,159,1.207,160,0.994,161,3.077,162,1.207,163,3.077,164,3.077,165,1.434,166,2.029,167,2.029,168,2.029,169,2.029,170,2.029,171,1.207,172,2.824,173,2.175,174,1.671,175,1.434,176,1.434,177,1.207,178,1.207,179,2.029,180,2.029,181,1.207,182,1.207,183,3.077,184,1.207,185,1.207,186,1.207,187,1.207,188,2.627,189,1.207,190,2.792,191,1.207,192,2.625,193,2.029,194,0.994,195,2.127,196,0.994,197,2.029,198,2.029,199,2.029,200,0.595,201,0.853,202,1.207,203,1.207,204,0.665,205,1.434,206,1.207,207,2.824,208,3.252,209,0.595,210,1.207,211,2.029,212,0.853,213,1.207,214,1.207,215,1.207,216,1.207,217,1.207,218,1.207,219,1.207,220,1.207,221,0.994,222,0.994,223,1.207,224,1.207,225,1.207,226,1.855,227,0.994,228,1.207,229,1.207,230,0.994,231,1.207,232,1.207,233,1.207,234,1.671,235,1.207,236,1.258,237,1.207,238,0.994,239,0.853,240,1.207,241,1.207,242,0.994,243,1.207,244,1.207,245,1.207,246,1.207,247,0.994,248,1.207]],["title/classes/CreatePostMetaOptionsDto.html",[21,0.019,126,1.858]],["body/classes/CreatePostMetaOptionsDto.html",[3,0.469,4,0.404,5,0.404,7,0.688,10,1.834,11,0.038,12,1.222,15,1.498,16,0.469,20,0.469,21,0.03,26,0.03,27,0.03,82,1.354,102,1.589,103,3.573,105,2.032,117,2.021,126,2.842,173,3.573,188,3.241,195,3.303,200,1.766,205,3.573,226,3.573,249,2.952,250,3.585,251,3.585,252,3.585]],["title/classes/CreateUserDto.html",[21,0.019,253,1.65]],["body/classes/CreateUserDto.html",[3,0.355,4,0.306,5,0.306,7,0.522,10,1.905,11,0.038,12,1.269,15,1.78,16,0.355,20,0.355,21,0.025,26,0.025,27,0.025,82,1.406,83,1.522,88,3.618,91,3.107,102,1.204,105,1.687,165,2.691,188,3.545,190,2.691,194,2.237,195,2.953,196,2.237,200,1.339,222,3.134,253,2.096,254,4.128,255,1.921,256,3.618,257,4.395,258,2.717,259,2.717,260,2.717,261,2.717,262,2.717,263,2.717,264,2.717,265,4.763,266,3.807,267,3.807,268,3.807,269,3.807,270,3.807,271,5.198,272,3.807,273,2.096,274,3.807,275,3.807,276,2.717,277,3.807,278,2.717,279,3.807,280,2.717,281,2.717]],["title/classes/GetUsersParamDto.html",[21,0.019,282,1.65]],["body/classes/GetUsersParamDto.html",[3,0.444,4,0.382,5,0.382,7,0.651,10,1.356,11,0.039,12,0.904,16,0.644,20,0.444,21,0.032,26,0.029,27,0.029,82,1.454,83,1.769,89,3.355,97,2.435,102,1.503,105,1.961,116,2.793,118,2.743,136,1.356,190,3.127,200,1.671,201,2.398,208,3.642,209,1.671,273,2.71,282,2.435,283,3.642,284,2.743,285,2.793,286,4.424,287,3.392,288,3.392,289,3.642,290,2.793]],["title/classes/PatchPostDto.html",[21,0.019,291,1.858]],["body/classes/PatchPostDto.html",[3,0.451,4,0.388,5,0.388,7,0.662,10,1.379,11,0.039,12,0.919,16,0.649,20,0.451,21,0.029,26,0.029,27,0.029,82,1.019,89,3.373,101,1.699,102,1.529,104,2.438,105,1.982,117,1.788,136,1.379,160,2.84,195,2.773,200,1.699,204,1.899,207,3.682,209,1.699,273,2.462,289,3.682,291,2.773,292,3.682,293,3.682,294,4.473,295,4.473,296,3.449,297,3.449,298,2.84,299,2.438,300,3.449]],["title/classes/PatchUserDto.html",[21,0.019,301,1.858]],["body/classes/PatchUserDto.html",[3,0.534,4,0.46,5,0.46,11,0.038,16,0.651,20,0.534,21,0.026,26,0.032,27,0.032,102,1.811,204,2.249,253,2.249,255,2.888,293,4.096,298,3.364,301,3.084,302,3.364,303,4.975,304,3.364,305,3.364,306,3.364]],["title/controllers/PostsController.html",[0,0.98,307,1.858]],["body/controllers/PostsController.html",[0,0.59,2,0.653,3,0.236,4,0.203,5,0.203,7,0.347,8,1.247,10,1.382,11,0.039,12,0.921,14,1.531,15,1.623,16,0.553,17,0.433,20,0.236,21,0.012,22,1.12,23,0.89,24,0.8,26,0.018,27,0.018,60,1.277,73,2.735,80,1.902,81,1.902,82,1.02,83,1.382,101,2.206,106,1.277,107,1.487,108,1.487,109,1.277,110,1.487,111,1.487,112,1.487,113,2.443,114,1.487,115,1.277,117,1.986,123,3.211,136,1.56,140,1.277,143,1.487,175,1.277,176,1.277,204,0.994,209,0.89,212,1.277,236,1.744,239,1.277,291,2.418,299,1.989,307,1.744,308,1.487,309,1.487,310,2.813,311,2.813,312,2.813,313,1.806,314,2.813,315,2.813,316,2.443,317,2.813,318,3.901,319,4.228,320,2.316,321,1.806,322,1.806,323,2.813,324,1.806,325,2.813,326,1.806,327,2.316,328,1.806,329,2.316,330,2.813,331,3.211,332,2.813,333,1.806,334,1.806,335,2.813,336,1.806,337,1.806,338,1.989,339,1.806,340,2.316,341,3.456,342,1.806,343,1.806,344,1.487,345,1.806,346,1.806,347,1.806,348,2.316,349,1.277,350,1.922,351,2.316,352,1.806,353,1.806,354,2.845,355,2.813,356,2.813,357,2.813,358,1.806,359,1.806,360,1.806,361,1.806,362,1.806,363,1.806,364,2.316,365,1.487,366,2.316,367,1.487,368,2.845,369,2.845,370,1.487,371,1.277,372,1.487,373,1.806,374,1.806,375,1.806,376,1.806,377,1.806,378,1.806,379,1.806,380,1.806,381,1.806,382,1.806,383,2.316,384,1.989,385,1.806,386,1.806,387,1.806,388,1.806]],["title/modules/PostsModule.html",[28,1.083,41,1.65]],["body/modules/PostsModule.html",[2,1.517,3,0.41,4,0.353,5,0.353,11,0.038,16,0.661,17,0.751,20,0.41,21,0.02,26,0.027,27,0.027,28,1.711,30,1.388,31,1.388,32,1.725,33,1.725,34,1.388,35,2.606,36,1.725,41,3.101,42,2.405,43,2.311,44,1.725,45,1.543,47,2.602,71,2.579,236,1.942,238,2.579,239,2.214,247,2.579,307,2.935,309,2.579,338,2.214,348,2.579,350,2.674,354,2.579,367,2.579,389,2.579,390,2.579,391,3.133,392,3.133,393,3.133,394,3.133,395,3.133,396,3.133,397,3.133,398,3.133,399,3.133,400,3.133,401,3.133]],["title/injectables/PostsService.html",[52,1.083,350,1.477]],["body/injectables/PostsService.html",[0,0.795,3,0.318,4,0.274,5,0.274,7,0.467,8,1.56,11,0.039,12,1.102,14,1.56,15,1.481,16,0.541,17,0.584,20,0.318,21,0.023,22,1.509,23,1.199,24,1.56,26,0.023,27,0.023,52,1.272,53,1.34,73,2.759,76,1.721,77,2.004,78,1.812,80,2.277,81,2.277,82,1.221,83,1.654,84,2.489,92,1.721,93,2.004,96,2.004,97,2.647,101,2.546,106,3.204,115,3.204,117,1.654,165,2.489,204,1.938,234,2.899,236,2.183,242,2.899,299,1.721,320,2.004,327,2.004,338,1.721,349,2.489,350,2.038,371,1.721,384,1.721,402,2.004,403,2.899,404,2.434,405,3.521,406,2.434,407,3.521,408,2.434,409,2.434,410,2.434,411,2.434,412,2.434,413,2.434,414,2.434,415,2.434,416,3.521,417,2.434,418,3.731,419,3.521]],["title/injectables/UserService.html",[52,1.083,78,1.199]],["body/injectables/UserService.html",[3,0.315,4,0.271,5,0.271,7,0.462,8,1.547,11,0.039,12,0.93,14,1.547,15,1.564,16,0.537,17,0.577,20,0.315,21,0.027,24,1.547,26,0.023,27,0.023,52,1.262,53,1.324,62,1.066,69,1.491,73,2.748,78,1.396,80,1.922,81,1.922,82,1.031,83,1.396,89,2.967,91,3.186,92,1.701,97,2.481,136,0.962,256,3.711,273,2.835,282,2.481,284,2.967,290,1.981,403,3.382,420,1.981,421,3.491,422,2.874,423,3.491,424,3.491,425,3.491,426,3.491,427,2.406,428,3.382,429,2.904,430,2.406,431,3.491,432,3.491,433,2.874,434,3.491,435,2.406,436,3.491,437,3.491,438,2.874,439,1.981,440,1.981,441,2.406,442,2.406,443,2.406,444,3.491,445,3.491]],["title/controllers/UsersController.html",[0,0.98,446,1.858]],["body/controllers/UsersController.html",[0,0.581,2,0.643,3,0.233,4,0.2,5,0.2,7,0.342,8,1.232,10,1.368,11,0.039,12,0.912,14,1.517,15,0.581,16,0.582,17,0.427,20,0.233,21,0.012,23,0.876,24,1.517,26,0.018,27,0.018,60,1.257,73,2.722,76,1.257,78,1.112,80,1.884,81,2.311,82,1.373,83,1.368,84,1.257,95,1.464,97,1.53,113,1.257,117,1.547,118,2.398,129,3.185,130,3.185,136,1.779,209,0.876,230,2.289,253,2.559,273,2.957,282,2.13,284,2.758,301,2.982,304,2.289,316,1.965,331,2.289,340,1.464,344,2.289,349,1.257,364,1.464,365,2.289,366,2.817,368,2.289,369,2.289,370,1.464,371,1.257,372,1.464,383,1.464,384,1.965,428,3.663,429,3.4,433,2.289,439,1.464,440,1.464,446,1.723,447,1.464,448,2.78,449,3.422,450,2.78,451,1.779,452,1.779,453,1.779,454,1.779,455,2.78,456,2.78,457,2.78,458,1.779,459,2.78,460,2.289,461,1.779,462,2.78,463,2.78,464,2.78,465,3.869,466,1.779,467,2.78,468,2.78,469,2.78,470,1.779,471,1.779,472,1.779,473,1.779,474,1.779,475,1.779,476,1.779,477,3.422,478,1.779,479,1.779,480,1.464,481,3.422,482,1.779,483,1.779,484,1.779,485,1.779,486,1.464,487,1.779,488,1.779,489,1.779,490,1.779,491,1.779,492,1.779,493,1.779,494,1.779,495,1.779,496,1.779,497,1.779,498,1.779]],["title/modules/UsersModule.html",[28,1.083,42,1.329]],["body/modules/UsersModule.html",[2,1.561,3,0.428,4,0.368,5,0.368,11,0.039,16,0.673,17,0.784,20,0.428,21,0.021,26,0.028,27,0.028,28,1.748,30,1.449,31,1.449,32,1.8,33,1.8,34,1.449,35,2.662,36,2.662,40,2.128,42,2.483,43,2.378,44,1.8,45,1.611,47,2.027,69,2.678,78,2.357,446,2.998,480,2.692,499,2.692,500,2.692,501,2.692,502,3.27,503,3.27,504,3.27]],["title/coverage.html",[505,2.88]],["body/coverage.html",[0,1.603,1,1.804,5,0.328,6,2.396,11,0.038,18,1.434,21,0.034,26,0.026,27,0.026,34,1.29,52,1.773,54,2.396,58,1.804,59,2.396,62,1.29,72,2.396,78,1.164,82,0.859,101,1.434,103,2.822,104,2.822,117,1.164,126,1.804,205,2.057,227,2.396,249,2.396,253,1.602,254,2.396,255,2.822,282,1.602,283,2.396,284,1.804,285,2.396,291,1.804,292,2.396,301,1.804,302,2.396,307,1.804,308,2.396,316,2.057,350,1.434,402,2.396,420,2.396,422,2.396,446,1.804,447,2.396,505,2.057,506,2.396,507,2.91,508,5.863,509,4.905,510,4.558,511,4.905,512,2.396,513,2.91,514,2.91,515,2.91,516,2.91,517,2.91,518,2.91,519,2.91]],["title/dependencies.html",[31,1.596,520,2.068]],["body/dependencies.html",[11,0.039,17,0.938,21,0.031,26,0.031,27,0.031,31,1.733,200,1.927,201,2.764,209,1.927,305,3.219,306,3.219,521,3.911,522,3.911,523,5.261,524,3.911,525,3.911,526,3.911,527,3.911,528,3.911,529,3.911,530,3.911,531,3.911,532,3.911,533,3.911,534,3.911,535,3.911]],["title/miscellaneous/enumerations.html",[536,1.557,537,2.965]],["body/miscellaneous/enumerations.html",[7,0.727,11,0.039,26,0.031,27,0.031,109,3.354,117,1.897,140,3.354,144,3.906,172,3.906,173,4.142,174,3.906,175,3.354,176,3.354,212,3.354,429,3.354,536,2.346,537,3.115,538,3.784,539,3.784,540,3.784,541,3.784]],["title/miscellaneous/functions.html",[536,1.557,542,2.965]],["body/miscellaneous/functions.html",[7,0.867,11,0.034,26,0.034,27,0.034,34,2.48,512,3.716,536,2.798,542,3.716,543,4.514]],["title/index.html",[7,0.482,544,2.512,545,2.512]],["body/index.html",[4,0.223,11,0.036,26,0.02,27,0.02,45,2.29,57,3.522,118,2.539,136,0.792,137,1.631,221,1.631,226,1.4,329,1.631,351,1.631,418,2.487,438,1.631,460,1.631,486,3.826,505,1.4,506,2.487,546,1.981,547,1.981,548,3.662,549,3.021,550,1.981,551,1.981,552,1.981,553,1.981,554,3.021,555,3.662,556,1.981,557,1.981,558,4.096,559,1.981,560,4.982,561,1.981,562,4.833,563,1.981,564,1.981,565,1.981,566,3.021,567,1.981,568,3.021,569,1.981,570,3.662,571,1.981,572,1.981,573,1.981,574,1.981,575,1.981,576,1.981,577,4.096,578,3.021,579,1.981,580,1.981,581,1.981,582,1.981,583,4.647,584,3.021,585,4.096,586,1.981,587,3.021,588,1.981,589,3.021,590,4.647,591,4.096,592,1.981,593,3.021,594,1.981,595,1.981,596,1.981,597,1.981,598,4.096,599,1.981,600,1.981,601,1.981,602,1.981,603,3.021,604,1.981,605,1.981,606,1.981,607,1.981,608,1.981,609,3.021,610,1.981,611,1.981,612,1.981,613,3.021,614,1.981,615,1.981,616,3.372,617,3.021,618,1.981,619,1.981,620,1.981,621,1.981,622,1.981,623,1.981,624,1.981,625,1.981,626,3.021,627,1.981,628,1.981,629,1.981,630,1.981,631,3.662,632,1.981,633,1.981,634,1.981,635,1.981,636,1.981,637,3.021,638,1.981,639,1.981,640,1.981,641,3.021,642,1.981,643,1.981,644,1.981,645,3.021,646,3.021,647,1.981,648,1.981,649,1.981,650,1.981,651,1.981,652,1.981,653,1.981,654,1.981,655,1.981,656,1.981,657,1.981,658,1.631,659,1.981,660,1.981,661,1.981,662,1.981,663,1.981,664,1.981,665,1.631]],["title/modules.html",[30,1.806]],["body/modules.html",[11,0.033,26,0.033,27,0.033,29,2.611,30,1.867,40,2.075,41,2.319,42,1.867,616,4.643,666,5.64,667,5.64,668,5.64]],["title/overview.html",[669,3.355]],["body/overview.html",[2,1.119,11,0.038,18,2.319,26,0.027,27,0.027,28,1.119,29,3.566,30,1.373,31,1.373,32,1.705,33,1.705,34,1.373,35,1.705,36,1.705,37,2.55,38,2.55,39,2.55,40,2.665,41,3.043,42,2.45,43,2.293,44,1.705,45,1.526,53,1.705,62,2.45,65,2.55,66,2.55,67,2.55,78,2.21,102,1.373,350,2.319,389,2.55,390,2.55,499,2.55,500,2.55,501,2.55,669,2.55,670,4.707,671,3.097]],["title/properties.html",[105,1.596,520,2.068]],["body/properties.html",[11,0.038,26,0.034,27,0.034,105,1.968,136,1.776,658,3.656,665,3.656,672,4.441,673,4.441,674,4.441]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":508,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":673,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":530,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":533,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":529,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":510,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":515,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":509,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":514,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":511,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":516,"title":{},"body":{"coverage.html":{}}}],["03",{"_index":146,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["1",{"_index":469,"title":{},"body":{"controllers/UsersController.html":{}}}],["1.1.23",{"_index":522,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":487,"title":{},"body":{"controllers/UsersController.html":{}}}],["100",{"_index":517,"title":{},"body":{"coverage.html":{}}}],["10})@apiquery({name",{"_index":466,"title":{},"body":{"controllers/UsersController.html":{}}}],["11.0.1",{"_index":523,"title":{},"body":{"dependencies.html":{}}}],["1234",{"_index":290,"title":{},"body":{"classes/GetUsersParamDto.html":{},"injectables/UserService.html":{}}}],["1234})@isoptional()@isint()@type(undefined",{"_index":287,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["16t07:46:32+0000",{"_index":220,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["16t07:46:32+0000'})@isoptional()@isiso8601",{"_index":147,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["2",{"_index":419,"title":{},"body":{"injectables/PostsService.html":{}}}],["2.0.5",{"_index":525,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":331,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["201",{"_index":318,"title":{},"body":{"controllers/PostsController.html":{}}}],["2024",{"_index":145,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["3/3",{"_index":518,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":670,"title":{},"body":{"overview.html":{}}}],["6",{"_index":671,"title":{},"body":{"overview.html":{}}}],["7.3.0",{"_index":528,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":535,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":164,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["alice",{"_index":444,"title":{},"body":{"injectables/UserService.html":{}}}],["alice@doe.com",{"_index":445,"title":{},"body":{"injectables/UserService.html":{}}}],["allowing",{"_index":604,"title":{},"body":{"index.html":{}}}],["amazing",{"_index":651,"title":{},"body":{"index.html":{}}}],["api",{"_index":344,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["apioperation",{"_index":368,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["apioperation({summary",{"_index":314,"title":{},"body":{"controllers/PostsController.html":{}}}],["apiproperty",{"_index":207,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{}}}],["apiproperty({description",{"_index":160,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{}}}],["apiproperty({enum",{"_index":135,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["apiproperty({example",{"_index":185,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["apipropertyoptional",{"_index":208,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{}}}],["apipropertyoptional({description",{"_index":116,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{}}}],["apipropertyoptional({type",{"_index":127,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["apiquery",{"_index":481,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiresponse",{"_index":369,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["apitags",{"_index":370,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["apitags('posts",{"_index":374,"title":{},"body":{"controllers/PostsController.html":{}}}],["apitags('users",{"_index":483,"title":{},"body":{"controllers/UsersController.html":{}}}],["app.controller",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":486,"title":{},"body":{"controllers/UsersController.html":{},"index.html":{}}}],["application'})@apiresponse({status",{"_index":458,"title":{},"body":{"controllers/UsersController.html":{}}}],["applications",{"_index":554,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["array",{"_index":128,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["auth",{"_index":61,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":70,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":58,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authmodule",{"_index":40,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":658,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":62,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["aws",{"_index":593,"title":{},"body":{"index.html":{}}}],["backers",{"_index":652,"title":{},"body":{"index.html":{}}}],["based",{"_index":460,"title":{},"body":{"controllers/UsersController.html":{},"index.html":{}}}],["blog",{"_index":123,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/PostsController.html":{}}}],["board",{"_index":644,"title":{},"body":{"index.html":{}}}],["body",{"_index":364,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":86,"title":{},"body":{"injectables/AuthService.html":{}}}],["bootstrap",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":668,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":666,"title":{},"body":{"modules.html":{}}}],["building",{"_index":549,"title":{},"body":{"index.html":{}}}],["business",{"_index":424,"title":{},"body":{"injectables/UserService.html":{}}}],["buộc",{"_index":225,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["bắt",{"_index":224,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["c",{"_index":234,"title":{},"body":{"classes/CreatePostDto.html":{},"injectables/PostsService.html":{}}}],["channel",{"_index":619,"title":{},"body":{"index.html":{}}}],["character",{"_index":275,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["characters",{"_index":270,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["check",{"_index":583,"title":{},"body":{"index.html":{}}}],["cho",{"_index":357,"title":{},"body":{"controllers/PostsController.html":{}}}],["chức",{"_index":395,"title":{},"body":{"modules/PostsModule.html":{}}}],["class",{"_index":21,"title":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":102,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"overview.html":{}}}],["clicks",{"_index":603,"title":{},"body":{"index.html":{}}}],["client",{"_index":341,"title":{},"body":{"controllers/PostsController.html":{}}}],["cloud",{"_index":588,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":65,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":66,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":67,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_postsmodule",{"_index":389,"title":{},"body":{"modules/PostsModule.html":{},"overview.html":{}}}],["cluster_postsmodule_imports",{"_index":391,"title":{},"body":{"modules/PostsModule.html":{}}}],["cluster_postsmodule_providers",{"_index":390,"title":{},"body":{"modules/PostsModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":499,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":500,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":501,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["come",{"_index":610,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":521,"title":{},"body":{"dependencies.html":{}}}],["connect",{"_index":421,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log(createpostdto",{"_index":386,"title":{},"body":{"controllers/PostsController.html":{}}}],["console.log(createuserdto",{"_index":494,"title":{},"body":{"controllers/UsersController.html":{}}}],["console.log(patchpostsdto",{"_index":388,"title":{},"body":{"controllers/PostsController.html":{}}}],["const",{"_index":96,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{}}}],["constructor",{"_index":76,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{}}}],["constructor(usersservice",{"_index":77,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{}}}],["content",{"_index":106,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{}}}],["content'})@isoptional()@isstring",{"_index":119,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["context",{"_index":155,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":64,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('posts",{"_index":373,"title":{},"body":{"controllers/PostsController.html":{}}}],["controller('users",{"_index":482,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["courses",{"_index":625,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":505,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":204,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{}}}],["create(createpostdto",{"_index":405,"title":{},"body":{"injectables/PostsService.html":{}}}],["created",{"_index":320,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{}}}],["createpost",{"_index":310,"title":{},"body":{"controllers/PostsController.html":{}}}],["createpost(@body",{"_index":385,"title":{},"body":{"controllers/PostsController.html":{}}}],["createpost(createpostdto",{"_index":313,"title":{},"body":{"controllers/PostsController.html":{}}}],["createpostdto",{"_index":101,"title":{"classes/CreatePostDto.html":{}},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"coverage.html":{}}}],["createpostmetaoptionsdto",{"_index":126,"title":{"classes/CreatePostMetaOptionsDto.html":{}},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"coverage.html":{}}}],["creates",{"_index":315,"title":{},"body":{"controllers/PostsController.html":{}}}],["createuserdto",{"_index":253,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/PatchUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["createusers",{"_index":448,"title":{},"body":{"controllers/UsersController.html":{}}}],["createusers(@body",{"_index":493,"title":{},"body":{"controllers/UsersController.html":{}}}],["createusers(createuserdto",{"_index":451,"title":{},"body":{"controllers/UsersController.html":{}}}],["các",{"_index":338,"title":{},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{}}}],["cấu",{"_index":244,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["cầu",{"_index":359,"title":{},"body":{"controllers/PostsController.html":{}}}],["database",{"_index":432,"title":{},"body":{"injectables/UserService.html":{}}}],["date",{"_index":143,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/PostsController.html":{}}}],["declarations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorator",{"_index":409,"title":{},"body":{"injectables/PostsService.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["deeper",{"_index":621,"title":{},"body":{"index.html":{}}}],["defaultvaluepipe",{"_index":478,"title":{},"body":{"controllers/UsersController.html":{}}}],["defaultvaluepipe(1",{"_index":491,"title":{},"body":{"controllers/UsersController.html":{}}}],["defaultvaluepipe(10",{"_index":489,"title":{},"body":{"controllers/UsersController.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{}}}],["delete",{"_index":474,"title":{},"body":{"controllers/UsersController.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":577,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":592,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":584,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":602,"title":{},"body":{"index.html":{}}}],["description",{"_index":136,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":563,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":632,"title":{},"body":{"index.html":{}}}],["discord",{"_index":618,"title":{},"body":{"index.html":{}}}],["dive",{"_index":620,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":506,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["draft",{"_index":174,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["dtos/create",{"_index":371,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{}}}],["dtos/get",{"_index":439,"title":{},"body":{"injectables/UserService.html":{},"controllers/UsersController.html":{}}}],["dtos/patch",{"_index":372,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["duyệt",{"_index":343,"title":{},"body":{"controllers/PostsController.html":{}}}],["dấu",{"_index":411,"title":{},"body":{"injectables/PostsService.html":{}}}],["dụng",{"_index":346,"title":{},"body":{"controllers/PostsController.html":{}}}],["e2e",{"_index":572,"title":{},"body":{"index.html":{}}}],["each",{"_index":183,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["efficient",{"_index":550,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":582,"title":{},"body":{"index.html":{}}}],["eight",{"_index":269,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["email",{"_index":91,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/UserService.html":{}}}],["endpoint",{"_index":497,"title":{},"body":{"controllers/UsersController.html":{}}}],["ensure",{"_index":580,"title":{},"body":{"index.html":{}}}],["enterprise",{"_index":636,"title":{},"body":{"index.html":{}}}],["entries",{"_index":462,"title":{},"body":{"controllers/UsersController.html":{}}}],["enum",{"_index":211,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["enum(draft",{"_index":380,"title":{},"body":{"controllers/PostsController.html":{}}}],["enum(post,page",{"_index":379,"title":{},"body":{"controllers/PostsController.html":{}}}],["enumerations",{"_index":537,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/poststatus.enum",{"_index":203,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["enums/posttype.enum",{"_index":202,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["error",{"_index":153,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["example",{"_index":118,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["existing",{"_index":330,"title":{},"body":{"controllers/PostsController.html":{}}}],["experience",{"_index":623,"title":{},"body":{"index.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["exports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":527,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":293,"title":{},"body":{"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{}}}],["false",{"_index":130,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/UsersController.html":{}}}],["fast",{"_index":596,"title":{},"body":{"index.html":{}}}],["featured",{"_index":121,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["featuredimageurl",{"_index":107,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/PostsController.html":{}}}],["features",{"_index":606,"title":{},"body":{"index.html":{}}}],["fetched",{"_index":459,"title":{},"body":{"controllers/UsersController.html":{}}}],["fetches",{"_index":455,"title":{},"body":{"controllers/UsersController.html":{}}}],["few",{"_index":598,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["find",{"_index":436,"title":{},"body":{"injectables/UserService.html":{}}}],["findall",{"_index":403,"title":{},"body":{"injectables/PostsService.html":{},"injectables/UserService.html":{}}}],["findall(getuserparamdto",{"_index":427,"title":{},"body":{"injectables/UserService.html":{}}}],["findall(userid",{"_index":407,"title":{},"body":{"injectables/PostsService.html":{}}}],["findonebyid",{"_index":426,"title":{},"body":{"injectables/UserService.html":{}}}],["findonebyid(id",{"_index":434,"title":{},"body":{"injectables/UserService.html":{}}}],["firstname",{"_index":256,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/UserService.html":{}}}],["focus",{"_index":605,"title":{},"body":{"index.html":{}}}],["follow",{"_index":639,"title":{},"body":{"index.html":{}}}],["forwardref",{"_index":69,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/UserService.html":{},"modules/UsersModule.html":{}}}],["framework",{"_index":548,"title":{},"body":{"index.html":{}}}],["full",{"_index":635,"title":{},"body":{"index.html":{}}}],["function",{"_index":513,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":542,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":601,"title":{},"body":{"index.html":{}}}],["get('/:id",{"_index":485,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('/:id')@apioperation({summary",{"_index":454,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('/:userid",{"_index":325,"title":{},"body":{"controllers/PostsController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getposts",{"_index":311,"title":{},"body":{"controllers/PostsController.html":{}}}],["getposts(@param('userid",{"_index":376,"title":{},"body":{"controllers/PostsController.html":{}}}],["getposts(userid",{"_index":324,"title":{},"body":{"controllers/PostsController.html":{}}}],["getting",{"_index":544,"title":{"index.html":{}},"body":{}}],["getuserparamdto",{"_index":433,"title":{},"body":{"injectables/UserService.html":{},"controllers/UsersController.html":{}}}],["getusers",{"_index":449,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusers(getuserparamdto",{"_index":453,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusersparamdto",{"_index":282,"title":{"classes/GetUsersParamDto.html":{}},"body":{"classes/GetUsersParamDto.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["graph",{"_index":628,"title":{},"body":{"index.html":{}}}],["grow",{"_index":648,"title":{},"body":{"index.html":{}}}],["gọi",{"_index":347,"title":{},"body":{"controllers/PostsController.html":{}}}],["gửi",{"_index":360,"title":{},"body":{"controllers/PostsController.html":{}}}],["hands",{"_index":622,"title":{},"body":{"index.html":{}}}],["handy",{"_index":611,"title":{},"body":{"index.html":{}}}],["headers",{"_index":475,"title":{},"body":{"controllers/UsersController.html":{}}}],["hello",{"_index":56,"title":{},"body":{"injectables/AppService.html":{}}}],["help",{"_index":626,"title":{},"body":{"index.html":{}}}],["here",{"_index":656,"title":{},"body":{"index.html":{}}}],["http",{"_index":339,"title":{},"body":{"controllers/PostsController.html":{}}}],["http://localhost.com/images/image1.jpg",{"_index":219,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["http://localhost.com/images/image1.jpg'})@isoptional()@isurl",{"_index":124,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["https://nestjs.com",{"_index":662,"title":{},"body":{"index.html":{}}}],["https://schema.org",{"_index":156,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["https://schema.org\",\\r\\n",{"_index":217,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["hồi",{"_index":356,"title":{},"body":{"controllers/PostsController.html":{}}}],["hợp",{"_index":247,"title":{},"body":{"classes/CreatePostDto.html":{},"modules/PostsModule.html":{}}}],["id",{"_index":89,"title":{},"body":{"injectables/AuthService.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":227,"title":{},"body":{"classes/CreatePostDto.html":{},"coverage.html":{}}}],["image",{"_index":122,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["imports",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["information",{"_index":586,"title":{},"body":{"index.html":{}}}],["infrastructure",{"_index":608,"title":{},"body":{"index.html":{}}}],["inject",{"_index":92,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{},"injectables/UserService.html":{}}}],["inject(forwardref",{"_index":94,"title":{},"body":{"injectables/AuthService.html":{}}}],["injectable",{"_index":52,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PostsService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PostsService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":53,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PostsService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injecting",{"_index":484,"title":{},"body":{"controllers/UsersController.html":{}}}],["install",{"_index":600,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":561,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":495,"title":{},"body":{"controllers/UsersController.html":{}}}],["interact",{"_index":629,"title":{},"body":{"index.html":{}}}],["ip",{"_index":476,"title":{},"body":{"controllers/UsersController.html":{}}}],["isarray",{"_index":192,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isauth",{"_index":74,"title":{},"body":{"injectables/AuthService.html":{}}}],["isdate",{"_index":191,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isemail",{"_index":277,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isenum",{"_index":189,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isenum(poststatus",{"_index":215,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isenum(posttype",{"_index":213,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isint",{"_index":289,"title":{},"body":{"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{}}}],["isiso8601",{"_index":199,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isjson",{"_index":197,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isnotempty",{"_index":195,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/PatchPostDto.html":{}}}],["isoptional",{"_index":190,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{}}}],["isoptional()@isstring()@isjson",{"_index":158,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isstring",{"_index":188,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{}}}],["isstring()@isemail()@isnotempty",{"_index":258,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring()@isnotempty",{"_index":250,"title":{},"body":{"classes/CreatePostMetaOptionsDto.html":{}}}],["isstring()@isnotempty()@minlength(3)@maxlength(96",{"_index":260,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring()@isnotempty()@minlength(8)@matches(/^(?=.*[a",{"_index":264,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring()@isoptional()@minlength(3)@maxlength(96",{"_index":262,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isurl",{"_index":198,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["items",{"_index":131,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["iều",{"_index":232,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["job",{"_index":641,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":643,"title":{},"body":{"index.html":{}}}],["john",{"_index":442,"title":{},"body":{"injectables/UserService.html":{}}}],["john@doe.com",{"_index":443,"title":{},"body":{"injectables/UserService.html":{}}}],["join",{"_index":654,"title":{},"body":{"index.html":{}}}],["jso",{"_index":150,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["kamil",{"_index":659,"title":{},"body":{"index.html":{}}}],["key",{"_index":226,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"index.html":{}}}],["key:value",{"_index":382,"title":{},"body":{"controllers/PostsController.html":{}}}],["khác",{"_index":416,"title":{},"body":{"injectables/PostsService.html":{}}}],["khách",{"_index":363,"title":{},"body":{"controllers/PostsController.html":{}}}],["không",{"_index":223,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["l",{"_index":236,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{}}}],["lastname",{"_index":257,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["learn",{"_index":614,"title":{},"body":{"index.html":{}}}],["legend",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["letter",{"_index":272,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["letters",{"_index":167,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["license",{"_index":665,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":646,"title":{},"body":{"index.html":{}}}],["limit",{"_index":428,"title":{},"body":{"injectables/UserService.html":{},"controllers/UsersController.html":{}}}],["linkedin",{"_index":640,"title":{},"body":{"index.html":{}}}],["list",{"_index":456,"title":{},"body":{"controllers/UsersController.html":{}}}],["liên",{"_index":397,"title":{},"body":{"modules/PostsModule.html":{}}}],["localhost:3000/posts/:userid",{"_index":375,"title":{},"body":{"controllers/PostsController.html":{}}}],["logic",{"_index":352,"title":{},"body":{"controllers/PostsController.html":{}}}],["login",{"_index":75,"title":{},"body":{"injectables/AuthService.html":{}}}],["login(email",{"_index":87,"title":{},"body":{"injectables/AuthService.html":{}}}],["looking",{"_index":587,"title":{},"body":{"index.html":{}}}],["loop",{"_index":638,"title":{},"body":{"index.html":{}}}],["lại",{"_index":361,"title":{},"body":{"controllers/PostsController.html":{}}}],["makes",{"_index":594,"title":{},"body":{"index.html":{}}}],["managing",{"_index":607,"title":{},"body":{"index.html":{}}}],["matches",{"_index":196,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["matches(/^(?=.*[a",{"_index":281,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matches(/^[a",{"_index":214,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["mau",{"_index":590,"title":{},"body":{"index.html":{}}}],["maxlength",{"_index":278,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["maxlength(96",{"_index":279,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["menthod",{"_index":431,"title":{},"body":{"injectables/UserService.html":{}}}],["message",{"_index":165,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"injectables/PostsService.html":{}}}],["meta",{"_index":205,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"coverage.html":{}}}],["metadata",{"_index":532,"title":{},"body":{"dependencies.html":{}}}],["metaoptions",{"_index":108,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/PostsController.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{}}}],["minimum",{"_index":268,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minlength",{"_index":194,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["minlength(3",{"_index":222,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["minlength(4",{"_index":210,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["minlength(8",{"_index":280,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":536,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["mit",{"_index":645,"title":{},"body":{"index.html":{}}}],["mode",{"_index":566,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":585,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":660,"title":{},"body":{"index.html":{}}}],["máy",{"_index":362,"title":{},"body":{"controllers/PostsController.html":{}}}],["mỗi",{"_index":237,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["một",{"_index":242,"title":{},"body":{"classes/CreatePostDto.html":{},"injectables/PostsService.html":{}}}],["n",{"_index":348,"title":{},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{}}}],["name",{"_index":81,"title":{},"body":{"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{}}}],["need",{"_index":633,"title":{},"body":{"index.html":{}}}],["needs",{"_index":295,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["nest",{"_index":555,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":664,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":57,"title":{},"body":{"injectables/AppService.html":{},"classes/CreatePostDto.html":{},"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":524,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":305,"title":{},"body":{"classes/PatchUserDto.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":526,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":209,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["new",{"_index":316,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["ng",{"_index":345,"title":{},"body":{"controllers/PostsController.html":{}}}],["nghĩa",{"_index":235,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["nh",{"_index":410,"title":{},"body":{"injectables/PostsService.html":{}}}],["nhận",{"_index":337,"title":{},"body":{"controllers/PostsController.html":{}}}],["node.js",{"_index":547,"title":{},"body":{"index.html":{}}}],["npm",{"_index":560,"title":{},"body":{"index.html":{}}}],["number",{"_index":273,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{}}}],["này",{"_index":233,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["năng",{"_index":400,"title":{},"body":{"modules/PostsModule.html":{}}}],["object",{"_index":151,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["offer",{"_index":642,"title":{},"body":{"index.html":{}}}],["official",{"_index":591,"title":{},"body":{"index.html":{}}}],["one",{"_index":271,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["open",{"_index":647,"title":{},"body":{"index.html":{}}}],["operations",{"_index":425,"title":{},"body":{"injectables/UserService.html":{}}}],["option",{"_index":228,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["optional",{"_index":83,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{}}}],["options.dto",{"_index":206,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["options.dto.ts",{"_index":249,"title":{},"body":{"classes/CreatePostMetaOptionsDto.html":{},"coverage.html":{}}}],["options.dto.ts:6",{"_index":251,"title":{},"body":{"classes/CreatePostMetaOptionsDto.html":{}}}],["options.dto.ts:9",{"_index":252,"title":{},"body":{"classes/CreatePostMetaOptionsDto.html":{}}}],["out",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":669,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["paage",{"_index":139,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["package",{"_index":520,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":429,"title":{},"body":{"injectables/UserService.html":{},"controllers/UsersController.html":{},"miscellaneous/enumerations.html":{}}}],["param",{"_index":365,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["param.dto",{"_index":440,"title":{},"body":{"injectables/UserService.html":{},"controllers/UsersController.html":{}}}],["param.dto.ts",{"_index":285,"title":{},"body":{"classes/GetUsersParamDto.html":{},"coverage.html":{}}}],["param.dto.ts:13",{"_index":288,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["parameters",{"_index":80,"title":{},"body":{"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{}}}],["parseintpipe",{"_index":477,"title":{},"body":{"controllers/UsersController.html":{}}}],["part",{"_index":634,"title":{},"body":{"index.html":{}}}],["partialtype",{"_index":298,"title":{},"body":{"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{}}}],["partialtype(createpostdto",{"_index":294,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["partialtype(createuserdto",{"_index":303,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["passed",{"_index":179,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["password",{"_index":88,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{}}}],["patch",{"_index":366,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["patchpostdto",{"_index":291,"title":{"classes/PatchPostDto.html":{}},"body":{"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"coverage.html":{}}}],["patchpostsdto",{"_index":335,"title":{},"body":{"controllers/PostsController.html":{}}}],["patchuser",{"_index":450,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchuser(@body",{"_index":498,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchuser(patchuserdto",{"_index":471,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchuserdto",{"_index":301,"title":{"classes/PatchUserDto.html":{}},"body":{"classes/PatchUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["per",{"_index":464,"title":{},"body":{"controllers/UsersController.html":{}}}],["perform",{"_index":423,"title":{},"body":{"injectables/UserService.html":{}}}],["person",{"_index":157,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["person\"\\r\\n",{"_index":218,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["ph",{"_index":246,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["phải",{"_index":241,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["phản",{"_index":355,"title":{},"body":{"controllers/PostsController.html":{}}}],["phần",{"_index":238,"title":{},"body":{"classes/CreatePostDto.html":{},"modules/PostsModule.html":{}}}],["platform",{"_index":589,"title":{},"body":{"index.html":{}}}],["please",{"_index":617,"title":{},"body":{"index.html":{}}}],["positione",{"_index":467,"title":{},"body":{"controllers/UsersController.html":{}}}],["possible",{"_index":137,"title":{},"body":{"classes/CreatePostDto.html":{},"index.html":{}}}],["post",{"_index":117,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["post'})@apiresponse({status",{"_index":317,"title":{},"body":{"controllers/PostsController.html":{}}}],["post'})@isstring()@isnotempty()@matches(/^[a",{"_index":162,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post'})@isstring()@minlength(4)@isnotempty",{"_index":186,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto",{"_index":299,"title":{},"body":{"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{}}}],["post.dto.ts",{"_index":104,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{},"coverage.html":{}}}],["post.dto.ts:107",{"_index":184,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:11",{"_index":297,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["post.dto.ts:133",{"_index":134,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:34",{"_index":187,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:42",{"_index":142,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:54",{"_index":171,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:62",{"_index":178,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:70",{"_index":120,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:81",{"_index":159,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:89",{"_index":125,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:97",{"_index":148,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["posts",{"_index":309,"title":{},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{}}}],["posts.controller",{"_index":401,"title":{},"body":{"modules/PostsModule.html":{}}}],["posts/posts.module",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["postscontroller",{"_index":307,"title":{"controllers/PostsController.html":{}},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{},"coverage.html":{}}}],["postsmodule",{"_index":41,"title":{"modules/PostsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PostsModule.html":{},"modules.html":{},"overview.html":{}}}],["postsservice",{"_index":350,"title":{"injectables/PostsService.html":{}},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"coverage.html":{},"overview.html":{}}}],["poststatus",{"_index":172,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["posttype",{"_index":109,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/PostsController.html":{},"miscellaneous/enumerations.html":{}}}],["prefix",{"_index":60,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["private",{"_index":95,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["production",{"_index":568,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":546,"title":{},"body":{"index.html":{}}}],["project",{"_index":558,"title":{},"body":{"index.html":{}}}],["properties",{"_index":105,"title":{"properties.html":{}},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"properties.html":{}}}],["provider",{"_index":412,"title":{},"body":{"injectables/PostsService.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["providers/auth.service",{"_index":63,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["providers/posts.service",{"_index":367,"title":{},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{}}}],["providers/users.service",{"_index":480,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["public",{"_index":73,"title":{},"body":{"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{}}}],["published",{"_index":144,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["published''})@isenum(poststatus)@isnotempty",{"_index":177,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["publishon",{"_index":110,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/PostsController.html":{}}}],["punlished",{"_index":381,"title":{},"body":{"controllers/PostsController.html":{}}}],["put",{"_index":473,"title":{},"body":{"controllers/UsersController.html":{}}}],["quan",{"_index":398,"title":{},"body":{"modules/PostsModule.html":{}}}],["query",{"_index":465,"title":{},"body":{"controllers/UsersController.html":{}}}],["query'})@apiquery({name",{"_index":461,"title":{},"body":{"controllers/UsersController.html":{}}}],["query('limit",{"_index":488,"title":{},"body":{"controllers/UsersController.html":{}}}],["query('page",{"_index":490,"title":{},"body":{"controllers/UsersController.html":{}}}],["questions",{"_index":615,"title":{},"body":{"index.html":{}}}],["quản",{"_index":394,"title":{},"body":{"modules/PostsModule.html":{}}}],["r\\n",{"_index":216,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["read",{"_index":655,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{}}}],["ready",{"_index":576,"title":{},"body":{"index.html":{}}}],["real",{"_index":630,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":531,"title":{},"body":{"dependencies.html":{}}}],["registered",{"_index":457,"title":{},"body":{"controllers/UsersController.html":{}}}],["repository",{"_index":557,"title":{},"body":{"index.html":{}}}],["request",{"_index":340,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["required",{"_index":129,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/UsersController.html":{}}}],["requiring",{"_index":597,"title":{},"body":{"index.html":{}}}],["reset",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resources",{"_index":609,"title":{},"body":{"index.html":{}}}],["response",{"_index":319,"title":{},"body":{"controllers/PostsController.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{}}}],["returned",{"_index":463,"title":{},"body":{"controllers/UsersController.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{}}}],["review",{"_index":176,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/PostsController.html":{},"miscellaneous/enumerations.html":{}}}],["run",{"_index":562,"title":{},"body":{"index.html":{}}}],["runs",{"_index":581,"title":{},"body":{"index.html":{}}}],["ruturn",{"_index":468,"title":{},"body":{"controllers/UsersController.html":{}}}],["rxjs",{"_index":534,"title":{},"body":{"dependencies.html":{}}}],["sample_token",{"_index":99,"title":{},"body":{"injectables/AuthService.html":{}}}],["save",{"_index":231,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["scalable",{"_index":551,"title":{},"body":{"index.html":{}}}],["scheduled",{"_index":175,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/PostsController.html":{},"miscellaneous/enumerations.html":{}}}],["schema",{"_index":111,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/PostsController.html":{}}}],["sent",{"_index":496,"title":{},"body":{"controllers/UsersController.html":{}}}],["serialize",{"_index":149,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["series",{"_index":212,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/PostsController.html":{},"miscellaneous/enumerations.html":{}}}],["series''})@isenum(posttype)@isnotempty",{"_index":141,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["server",{"_index":552,"title":{},"body":{"index.html":{}}}],["service",{"_index":349,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{}}}],["setup",{"_index":559,"title":{},"body":{"index.html":{}}}],["side",{"_index":553,"title":{},"body":{"index.html":{}}}],["sidebarenabled",{"_index":229,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["simple",{"_index":599,"title":{},"body":{"index.html":{}}}],["single",{"_index":437,"title":{},"body":{"injectables/UserService.html":{}}}],["slug",{"_index":112,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/PostsController.html":{}}}],["small",{"_index":166,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"index.html":{}}}],["spaces",{"_index":170,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["special",{"_index":274,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["specific",{"_index":286,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["sponsors",{"_index":650,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":543,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../poststatus.enum.ts",{"_index":538,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../posttype.enum.ts",{"_index":539,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":54,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":55,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":59,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.module",{"_index":504,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/auth/auth.module.ts",{"_index":68,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/providers/auth.service",{"_index":441,"title":{},"body":{"injectables/UserService.html":{}}}],["src/auth/providers/auth.service.ts",{"_index":72,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/providers/auth.service.ts:10",{"_index":90,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/providers/auth.service.ts:15",{"_index":85,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/providers/auth.service.ts:5",{"_index":79,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/main.ts",{"_index":512,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/posts/dtos/create",{"_index":103,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"coverage.html":{}}}],["src/posts/dtos/patch",{"_index":292,"title":{},"body":{"classes/PatchPostDto.html":{},"coverage.html":{}}}],["src/posts/enums/poststatus.enum.ts",{"_index":540,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/posts/enums/posttype.enum.ts",{"_index":541,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/posts/posts.controller.ts",{"_index":308,"title":{},"body":{"controllers/PostsController.html":{},"coverage.html":{}}}],["src/posts/posts.controller.ts:19",{"_index":326,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.controller.ts:45",{"_index":322,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.controller.ts:57",{"_index":334,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.module.ts",{"_index":392,"title":{},"body":{"modules/PostsModule.html":{}}}],["src/posts/providers/posts.service.ts",{"_index":402,"title":{},"body":{"injectables/PostsService.html":{},"coverage.html":{}}}],["src/posts/providers/posts.service.ts:10",{"_index":404,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/posts/providers/posts.service.ts:12",{"_index":408,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/posts/providers/posts.service.ts:29",{"_index":406,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/users/dtos/create",{"_index":254,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dtos/get",{"_index":283,"title":{},"body":{"classes/GetUsersParamDto.html":{},"coverage.html":{}}}],["src/users/dtos/patch",{"_index":302,"title":{},"body":{"classes/PatchUserDto.html":{},"coverage.html":{}}}],["src/users/providers/users.service",{"_index":93,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{}}}],["src/users/providers/users.service.ts",{"_index":420,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/users/providers/users.service.ts:12",{"_index":430,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/providers/users.service.ts:31",{"_index":435,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/users.controller.ts",{"_index":447,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:54",{"_index":470,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:62",{"_index":452,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:67",{"_index":472,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module",{"_index":71,"title":{},"body":{"modules/AuthModule.html":{},"modules/PostsModule.html":{}}}],["src/users/users.module.ts",{"_index":502,"title":{},"body":{"modules/UsersModule.html":{}}}],["start",{"_index":564,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":567,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":569,"title":{},"body":{"index.html":{}}}],["started",{"_index":545,"title":{"index.html":{}},"body":{}}],["starter",{"_index":556,"title":{},"body":{"index.html":{}}}],["statements",{"_index":507,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":113,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["stay",{"_index":637,"title":{},"body":{"index.html":{}}}],["steps",{"_index":578,"title":{},"body":{"index.html":{}}}],["story",{"_index":140,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/PostsController.html":{},"miscellaneous/enumerations.html":{}}}],["straightforward",{"_index":595,"title":{},"body":{"index.html":{}}}],["strimng",{"_index":180,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{}}}],["structure",{"_index":378,"title":{},"body":{"controllers/PostsController.html":{}}}],["successfully",{"_index":384,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{}}}],["successfully'})@patch",{"_index":333,"title":{},"body":{"controllers/PostsController.html":{}}}],["successfully'})@post",{"_index":321,"title":{},"body":{"controllers/PostsController.html":{}}}],["summary",{"_index":383,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["support",{"_index":616,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":667,"title":{},"body":{"modules.html":{}}}],["t",{"_index":239,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{}}}],["table",{"_index":422,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":519,"title":{},"body":{"coverage.html":{}}}],["tags",{"_index":114,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/PostsController.html":{}}}],["take",{"_index":579,"title":{},"body":{"index.html":{}}}],["test",{"_index":418,"title":{},"body":{"injectables/PostsService.html":{},"index.html":{}}}],["test:covdeployment",{"_index":574,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":573,"title":{},"body":{"index.html":{}}}],["tests",{"_index":570,"title":{},"body":{"index.html":{}}}],["th",{"_index":413,"title":{},"body":{"injectables/PostsService.html":{}}}],["thanks",{"_index":649,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.postsservice.findall(userid",{"_index":377,"title":{},"body":{"controllers/PostsController.html":{}}}],["this.usersservice.findall(getuserparamdto",{"_index":492,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findonebyid('1234",{"_index":98,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findonebyid(userid",{"_index":417,"title":{},"body":{"injectables/PostsService.html":{}}}],["thrown",{"_index":154,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["thành",{"_index":396,"title":{},"body":{"modules/PostsModule.html":{}}}],["time",{"_index":631,"title":{},"body":{"index.html":{}}}],["title",{"_index":115,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{}}}],["tiêm",{"_index":414,"title":{},"body":{"injectables/PostsService.html":{}}}],["tiếp",{"_index":336,"title":{},"body":{"controllers/PostsController.html":{}}}],["touch",{"_index":657,"title":{},"body":{"index.html":{}}}],["tr",{"_index":353,"title":{},"body":{"controllers/PostsController.html":{}}}],["transformer",{"_index":201,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"dependencies.html":{}}}],["trong",{"_index":240,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["true",{"_index":100,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreatePostDto.html":{}}}],["true})@minlength(3",{"_index":182,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["true})@type(undefined",{"_index":133,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["trình",{"_index":342,"title":{},"body":{"controllers/PostsController.html":{}}}],["trúc",{"_index":245,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["twitter",{"_index":663,"title":{},"body":{"index.html":{}}}],["type",{"_index":82,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["types",{"_index":306,"title":{},"body":{"classes/PatchUserDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":221,"title":{},"body":{"classes/CreatePostDto.html":{},"index.html":{}}}],["tính",{"_index":399,"title":{},"body":{"modules/PostsModule.html":{}}}],["tượng",{"_index":243,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["tập",{"_index":393,"title":{},"body":{"modules/PostsModule.html":{}}}],["undefined})@isoptional()@isarray()@isstring({each",{"_index":181,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["undefined})@isoptional()@isarray()@validatenested({each",{"_index":132,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["unit",{"_index":571,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":674,"title":{},"body":{"properties.html":{}}}],["upadated",{"_index":332,"title":{},"body":{"controllers/PostsController.html":{}}}],["updated",{"_index":300,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["updated'})@isint()@isnotempty",{"_index":296,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["updatepost",{"_index":312,"title":{},"body":{"controllers/PostsController.html":{}}}],["updatepost(@body",{"_index":387,"title":{},"body":{"controllers/PostsController.html":{}}}],["updatepost(patchpostsdto",{"_index":328,"title":{},"body":{"controllers/PostsController.html":{}}}],["updates",{"_index":329,"title":{},"body":{"controllers/PostsController.html":{},"index.html":{}}}],["url",{"_index":161,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["user",{"_index":97,"title":{},"body":{"injectables/AuthService.html":{},"classes/GetUsersParamDto.html":{},"injectables/PostsService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{}}}],["user.dto",{"_index":304,"title":{},"body":{"classes/PatchUserDto.html":{},"controllers/UsersController.html":{}}}],["user.dto.ts",{"_index":255,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/PatchUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:16",{"_index":261,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:22",{"_index":263,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:27",{"_index":259,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:36",{"_index":276,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["userid",{"_index":327,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{}}}],["users",{"_index":284,"title":{},"body":{"classes/GetUsersParamDto.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["users.controller",{"_index":503,"title":{},"body":{"modules/UsersModule.html":{}}}],["users/users.module",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":446,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":78,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["usersmodule",{"_index":42,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":84,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{}}}],["uses",{"_index":168,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["using",{"_index":438,"title":{},"body":{"injectables/UserService.html":{},"index.html":{}}}],["v",{"_index":354,"title":{},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{}}}],["validatenested",{"_index":193,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["validation",{"_index":152,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["validationpipe",{"_index":479,"title":{},"body":{"controllers/UsersController.html":{}}}],["validator",{"_index":200,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"dependencies.html":{}}}],["value",{"_index":173,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"miscellaneous/enumerations.html":{}}}],["values",{"_index":138,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["version",{"_index":672,"title":{},"body":{"properties.html":{}}}],["video",{"_index":624,"title":{},"body":{"index.html":{}}}],["visit",{"_index":613,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":627,"title":{},"body":{"index.html":{}}}],["void",{"_index":323,"title":{},"body":{"controllers/PostsController.html":{}}}],["vào",{"_index":415,"title":{},"body":{"injectables/PostsService.html":{}}}],["với",{"_index":248,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["want",{"_index":230,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/UsersController.html":{}}}],["watch",{"_index":565,"title":{},"body":{"index.html":{}}}],["website",{"_index":661,"title":{},"body":{"index.html":{}}}],["without",{"_index":169,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["working",{"_index":612,"title":{},"body":{"index.html":{}}}],["x",{"_index":351,"title":{},"body":{"controllers/PostsController.html":{},"index.html":{}}}],["you'd",{"_index":653,"title":{},"body":{"index.html":{}}}],["you're",{"_index":575,"title":{},"body":{"index.html":{}}}],["yêu",{"_index":358,"title":{},"body":{"controllers/PostsController.html":{}}}],["z0",{"_index":163,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["z\\d@$!%*#?&]{8",{"_index":267,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["z])(?=.*\\d)(?=.*[@$!%*#?&])[a",{"_index":266,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["za",{"_index":265,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["zoom",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPostsModule\n\nPostsModule\n\nAppModule -->\n\nPostsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            PostsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { UsersModule } from './users/users.module';\nimport { PostsModule } from './posts/posts.module';\nimport { AuthModule } from './auth/auth.module';\n\n@Module({\n  imports: [UsersModule, PostsModule, AuthModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello From NestJS!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { AuthService } from './providers/auth.service';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService \n\nAuthService \n\n\n\nAuthModule\n\nAuthModule\n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, forwardRef } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './providers/auth.service';\nimport { UsersModule } from 'src/users/users.module';\n\n@Module({\n  controllers: [AuthController],\n  providers: [AuthService],\n  imports: [forwardRef(() => UsersModule)],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/providers/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isAuth\n                            \n                            \n                                    Public\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/providers/auth.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isAuth\n                        \n                    \n                \n            \n            \n                \n                        \n                    isAuth()\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/auth.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(email: string, password: string, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/auth.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, forwardRef, Inject } from '@nestjs/common';\nimport { UserService } from 'src/users/providers/users.service';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    @Inject(forwardRef(() => UserService))\n    private readonly usersService: UserService,\n  ) {}\n  public login(email: string, password: string, id: string) {\n    const user = this.usersService.findOneById('1234');\n    return 'SAMPLE_TOKEN';\n  }\n\n  public isAuth() {\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePostDto.html":{"url":"classes/CreatePostDto.html","title":"class - CreatePostDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePostDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/dtos/create-post.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                content\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                featuredImageUrl\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                metaOptions\n                            \n                            \n                                    \n                                    \n                                    \n                                postType\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                publishOn\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                schema\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                slug\n                            \n                            \n                                    \n                                    \n                                    \n                                status\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                tags\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'This is the content of the post', example: 'The post content'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        featuredImageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Featured image for your blog post', example: 'http://localhost.com/images/image1.jpg'})@IsOptional()@IsUrl()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        metaOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreatePostMetaOptionsDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: 'array', required: false, items: undefined})@IsOptional()@IsArray()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:133\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        postType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         postType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: postType, description: 'Possible values, 'post', 'paage', 'story', 'series''})@IsEnum(postType)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        publishOn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'The date on which the blog post is published', example: '2024-03-16T07:46:32+0000'})@IsOptional()@IsISO8601()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        schema\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Serialize your JSO object else a validation error will be thrown', example: '{\n \"@context\": \"https://schema.org\",\n \"@type\": \"Person\"\n }'})@IsOptional()@IsString()@IsJSON()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'For Example - 'my-url'', example: 'my-blog-post'})@IsString()@IsNotEmpty()@Matches(/^[a-z0-9]+(?:-[a-z0-9]+)*$/, {message: 'A slug should be all small letters and uses only \"-\" and without spaces. For example \"my-url\"'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         postStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: postStatus, description: 'Possible value 'draft', 'scheduled', 'review', 'published''})@IsEnum(postStatus)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Array of tags passed as strimng values', example: undefined})@IsOptional()@IsArray()@IsString({each: true})@MinLength(3, {each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'This is a title', description: 'This is the title for the blog post'})@IsString()@MinLength(4)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsString,\n  IsEnum,\n  IsOptional,\n  //IsDate,\n  IsArray,\n  ValidateNested,\n  MinLength,\n  IsNotEmpty,\n  Matches,\n  IsJSON,\n  IsUrl,\n  IsISO8601,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { postType } from '../enums/postType.enum';\nimport { postStatus } from '../enums/postStatus.enum';\nimport { CreatePostMetaOptionsDto } from './create-post-meta-options.dto';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class CreatePostDto {\n  @ApiProperty({\n    example: 'This is a title',\n    description: 'This is the title for the blog post',\n  })\n  @IsString()\n  @MinLength(4)\n  @IsNotEmpty()\n  title: string;\n\n  @ApiProperty({\n    enum: postType,\n    description: \"Possible values, 'post', 'paage', 'story', 'series'\",\n  })\n  @IsEnum(postType)\n  @IsNotEmpty()\n  postType: postType;\n\n  @ApiProperty({\n    description: \"For Example - 'my-url'\",\n    example: 'my-blog-post',\n  })\n  @IsString()\n  @IsNotEmpty()\n  @Matches(/^[a-z0-9]+(?:-[a-z0-9]+)*$/, {\n    message:\n      'A slug should be all small letters and uses only \"-\" and without spaces. For example \"my-url\"',\n  })\n  slug: string;\n\n  @ApiProperty({\n    enum: postStatus,\n    description: \"Possible value 'draft', 'scheduled', 'review', 'published'\",\n  })\n  @IsEnum(postStatus)\n  @IsNotEmpty()\n  status: postStatus;\n\n  @ApiPropertyOptional({\n    description: 'This is the content of the post',\n    example: 'The post content',\n  })\n  @IsOptional()\n  @IsString()\n  content?: string;\n\n  @ApiPropertyOptional({\n    description:\n      'Serialize your JSO object else a validation error will be thrown',\n    example:\n      '{\\r\\n \"@context\": \"https://schema.org\",\\r\\n \"@type\": \"Person\"\\r\\n }',\n  })\n  @IsOptional()\n  @IsString()\n  @IsJSON()\n  schema?: string;\n\n  @ApiPropertyOptional({\n    description: 'Featured image for your blog post',\n    example: 'http://localhost.com/images/image1.jpg',\n  })\n  @IsOptional()\n  @IsUrl()\n  featuredImageUrl?: string;\n\n  @ApiPropertyOptional({\n    description: 'The date on which the blog post is published',\n    example: '2024-03-16T07:46:32+0000',\n  })\n  @IsOptional()\n  @IsISO8601()\n  publishOn?: Date;\n\n  @ApiPropertyOptional({\n    description: 'Array of tags passed as strimng values',\n    example: ['nestjs', 'typescript'],\n  })\n  @IsOptional()\n  @IsArray()\n  @IsString({ each: true })\n  @MinLength(3, { each: true })\n  tags?: string[];\n\n  @ApiPropertyOptional({\n    type: 'array',\n    required: false, //Không bắt buộc optional\n    items: {\n      type: 'object',\n      properties: {\n        key: {\n          type: 'string',\n          description:\n            'The key can be any string identifier for your meta option',\n          example: 'sidebarEnabled',\n        },\n        value: {\n          type: 'any',\n          description: 'Any value that you want to save to the key',\n          example: true,\n        },\n      },\n    },\n  })\n  @IsOptional()\n  @IsArray()\n  @ValidateNested({ each: true }) //Điều này có nghĩa là mỗi phần tử trong metaOptions phải là một đối tượng có cấu trúc phù hợp với CreatePostMetaOptionsDto.\n  @Type(() => CreatePostMetaOptionsDto)\n  metaOptions?: CreatePostMetaOptionsDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePostMetaOptionsDto.html":{"url":"classes/CreatePostMetaOptionsDto.html","title":"class - CreatePostMetaOptionsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePostMetaOptionsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/dtos/create-post-meta-options.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                key\n                            \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post-meta-options.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post-meta-options.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreatePostMetaOptionsDto {\n  @IsString()\n  @IsNotEmpty()\n  key: string;\n\n  @IsNotEmpty()\n  value: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                lastName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(3)@MaxLength(96)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@MinLength(3)@MaxLength(96)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(8)@Matches(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/, {message: 'Minimum eight characters, at least one letter, one number and one special character'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEmail,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  Matches,\n  MaxLength,\n  MinLength,\n} from 'class-validator';\n\nexport class CreateUserDto {\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(3)\n  @MaxLength(96)\n  firstName: string;\n\n  @IsString()\n  @IsOptional()\n  @MinLength(3)\n  @MaxLength(96)\n  lastName?: string;\n\n  @IsString()\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(8)\n  @Matches(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/, {\n    message:\n      'Minimum eight characters, at least one letter, one number and one special character',\n  })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUsersParamDto.html":{"url":"classes/GetUsersParamDto.html","title":"class - GetUsersParamDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUsersParamDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/get-users-param.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Get user with a specific id', example: 1234})@IsOptional()@IsInt()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/get-users-param.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, IsOptional } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class GetUsersParamDto {\n  @ApiPropertyOptional({\n    description: 'Get user with a specific id',\n    example: 1234,\n  })\n  @IsOptional()\n  @IsInt()\n  @Type(() => Number)\n  id?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchPostDto.html":{"url":"classes/PatchPostDto.html","title":"class - PatchPostDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchPostDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/dtos/patch-post.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreatePostDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The ID of the post that needs to be updated'})@IsInt()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/patch-post.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsInt, IsNotEmpty } from 'class-validator';\nimport { CreatePostDto } from './create-post.dto';\n\nexport class PatchPostDto extends PartialType(CreatePostDto) {\n  @ApiProperty({\n    description: 'The ID of the post that needs to be updated',\n  })\n  @IsInt()\n  @IsNotEmpty()\n  id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchUserDto.html":{"url":"classes/PatchUserDto.html","title":"class - PatchUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/patch-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateUserDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateUserDto } from './create-user.dto';\nimport { PartialType } from '@nestjs/mapped-types';\n\nexport class PatchUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PostsController.html":{"url":"controllers/PostsController.html","title":"controller - PostsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PostsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/posts.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                posts\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                createPost\n                            \n                            \n                                    \n                                    Public\n                                getPosts\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                updatePost\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        createPost\n                        \n                    \n                \n            \n            \n                \n                        \n                    createPost(createPostDto: CreatePostDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Creates a new blog post'})@ApiResponse({status: 201, description: 'You get a 201 response if your post is created successfully'})@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/posts/posts.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPostDto\n                                            \n                                                            CreatePostDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        getPosts\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPosts(userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:userId')\n                \n            \n\n                    \n                        \n                            Defined in src/posts/posts.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        updatePost\n                        \n                    \n                \n            \n            \n                \n                        \n                    updatePost(patchPostsDto: PatchPostDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Updates an existing blog post'})@ApiResponse({status: 200, description: 'A 200 response if the post is upadated successfully'})@Patch()\n                \n            \n\n                    \n                        \n                            Defined in src/posts/posts.controller.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                patchPostsDto\n                                            \n                                                            PatchPostDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        //Tiếp nhận các HTTP Request từ client (trình duyệt, API client, ứng dụng,...).\n//Gọi đến service (PostsService) để xử lý logic.\n//Trả về phản hồi (Response) về cho client. => xử lý các yêu cầu đến và gửi phản hồi lại cho máy khách.\n\nimport { Body, Controller, Get, Param, Patch, Post } from '@nestjs/common';\nimport { PostsService } from './providers/posts.service';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { CreatePostDto } from './dtos/create-post.dto';\nimport { PatchPostDto } from './dtos/patch-post.dto';\n\n@Controller('posts')\n@ApiTags('Posts')\nexport class PostsController {\n  constructor(private readonly postsService: PostsService) {}\n  /*\n    Get localhost:3000/posts/:userId\n  */\n  @Get('/:userId')\n  public getPosts(@Param('userId') userId: string) {\n    return this.postsService.findAll(userId);\n  }\n\n  /*\n  Structure of request body to create a new post\n  ****************\n  title: string \n  postType: enum(post,page, story, series)\n  slug: string\n  status: enum(draft, scheduled, review, punlished)\n  content?: string\n  schema?: string\n  featuredImageUrl?: string \n  publishOn: Date\n  tags: string[]\n  metaOptions: [{key:value}]\n  */\n  @ApiOperation({\n    summary: 'Creates a new blog post',\n  })\n  @ApiResponse({\n    status: 201,\n    description: 'You get a 201 response if your post is created successfully',\n  })\n  @Post()\n  public createPost(@Body() createPostDto: CreatePostDto) {\n    console.log(createPostDto);\n  }\n\n  @ApiOperation({\n    summary: 'Updates an existing blog post',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'A 200 response if the post is upadated successfully',\n  })\n  @Patch()\n  public updatePost(@Body() patchPostsDto: PatchPostDto) {\n    console.log(patchPostsDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PostsModule.html":{"url":"modules/PostsModule.html","title":"module - PostsModule","body":"\n                   \n\n\n\n\n    Modules\n    PostsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PostsModule\n\n\n\ncluster_PostsModule_providers\n\n\n\ncluster_PostsModule_imports\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nPostsModule\n\nPostsModule\n\nPostsModule -->\n\nUsersModule->PostsModule\n\n\n\n\n\nPostsService\n\nPostsService\n\nPostsModule -->\n\nPostsService->PostsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/posts/posts.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PostsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PostsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        //Tập hợp, quản lý và tổ chức các thành phần liên quan đến tính năng \"Posts\n\nimport { Module } from '@nestjs/common';\nimport { PostsController } from './posts.controller';\nimport { PostsService } from './providers/posts.service';\nimport { UsersModule } from 'src/users/users.module';\n\n@Module({\n  controllers: [PostsController],\n  providers: [PostsService],\n  imports: [UsersModule],\n})\nexport class PostsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostsService.html":{"url":"injectables/PostsService.html","title":"injectable - PostsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PostsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/providers/posts.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                create\n                            \n                            \n                                    Public\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/posts/providers/posts.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createPostDto: CreatePostDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/posts/providers/posts.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPostDto\n                                            \n                                                            CreatePostDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         { message: string; post: CreatePostDto; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/posts/providers/posts.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UserService } from 'src/users/providers/users.service';\nimport { CreatePostDto } from '../dtos/create-post.dto';\n\n// Là một decorator đánh dấu PostsService là một provider (service) có thể được tiêm (inject)\n// vào các class khác (controller, service khác, ...).\n@Injectable()\nexport class PostsService {\n  constructor(private readonly usersService: UserService) {}\n  public findAll(userId: string) {\n    const user = this.usersService.findOneById(userId);\n    //\n    return [\n      {\n        user: user,\n        title: 'Test title',\n        content: 'Test Content',\n      },\n      {\n        user: user,\n        title: 'Test title 2',\n        content: 'Test Content 2',\n      },\n    ];\n  }\n\n  public create(createPostDto: CreatePostDto) {\n    return {\n      message: 'Post created successfully',\n      post: createPostDto,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/providers/users.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Class to connect to Users table and perform business operations\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                findAll\n                            \n                            \n                                    Public\n                                findOneById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(getUserParamDto: GetUsersParamDto, limit: number, page: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:12\n                        \n                    \n\n\n            \n                \n                        The menthod to get all the users from the database\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                getUserParamDto\n                                            \n                                                            GetUsersParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:31\n                        \n                    \n\n\n            \n                \n                        Find a single user using the ID of the user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { id: number; firstName: string; email: string; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject, forwardRef } from '@nestjs/common';\nimport { GetUsersParamDto } from '../dtos/get-users-param.dto';\nimport { AuthService } from 'src/auth/providers/auth.service';\n/**\n * Class to connect to Users table and perform business operations\n */\n@Injectable()\nexport class UserService {\n  /**\n   * The menthod to get all the users from the database\n   */\n  public findAll(\n    getUserParamDto: GetUsersParamDto,\n    limit: number,\n    page: number,\n  ) {\n    return [\n      {\n        firstName: 'John',\n        email: 'john@doe.com',\n      },\n      {\n        firstName: 'Alice',\n        email: 'alice@doe.com',\n      },\n    ];\n  }\n  /**\n   * Find a single user using the ID of the user\n   */\n  public findOneById(id: string) {\n    return {\n      id: 1234,\n      firstName: 'Alice',\n      email: 'alice@doe.com',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                createUsers\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                getUsers\n                            \n                            \n                                    \n                                    Public\n                                patchUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        createUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUsers(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        getUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsers(getUserParamDto: GetUsersParamDto, limit: number, page: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')@ApiOperation({summary: 'Fetches a list of registered users on the application'})@ApiResponse({status: 200, description: 'User fetched successfully based on the query'})@ApiQuery({name: 'limit', type: 'number', required: false, description: 'The number of entries returned per query', example: 10})@ApiQuery({name: 'page', type: 'number', required: false, description: 'The positione of the page number that you want the API to ruturn', example: 1})\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                getUserParamDto\n                                            \n                                                            GetUsersParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        patchUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    patchUser(patchUserDto: PatchUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                patchUserDto\n                                            \n                                                            PatchUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         PatchUserDto\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Patch,\n  //Put,\n  //Delete,\n  Param,\n  Query,\n  Body,\n  //Headers,\n  //Ip,\n  ParseIntPipe,\n  DefaultValuePipe,\n  //ValidationPipe,\n} from '@nestjs/common';\nimport { CreateUserDto } from './dtos/create-user.dto';\nimport { GetUsersParamDto } from './dtos/get-users-param.dto';\nimport { PatchUserDto } from './dtos/patch-user.dto';\nimport { UserService } from './providers/users.service';\nimport { ApiOperation, ApiQuery, ApiResponse, ApiTags } from '@nestjs/swagger';\n\n@Controller('users')\n@ApiTags('Users')\nexport class UsersController {\n  constructor(\n    //Injecting Users Service\n    private readonly usersService: UserService,\n  ) {}\n\n  @Get('/:id')\n  @ApiOperation({\n    summary: 'Fetches a list of registered users on the application',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'User fetched successfully based on the query',\n  })\n  @ApiQuery({\n    name: 'limit',\n    type: 'number',\n    required: false,\n    description: 'The number of entries returned per query',\n    example: 10,\n  })\n  @ApiQuery({\n    name: 'page',\n    type: 'number',\n    required: false,\n    description:\n      'The positione of the page number that you want the API to ruturn',\n    example: 1,\n  })\n  public getUsers(\n    @Param() getUserParamDto: GetUsersParamDto,\n    @Query('limit', new DefaultValuePipe(10), ParseIntPipe) limit: number,\n    @Query('page', new DefaultValuePipe(1), ParseIntPipe) page: number,\n  ) {\n    return this.usersService.findAll(getUserParamDto, limit, page);\n  }\n  @Post()\n  public createUsers(@Body() createUserDto: CreateUserDto) {\n    console.log(createUserDto instanceof CreateUserDto);\n    return 'You sent a post request to users endpoint';\n  }\n  @Patch()\n  public patchUser(@Body() patchUserDto: PatchUserDto) {\n    return patchUserDto;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUserService \n\nUserService \n\n\n\nUsersModule\n\nUsersModule\n\nUserService  -->\n\nUsersModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUsersModule -->\n\nUserService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, forwardRef } from '@nestjs/common';\nimport { UsersController } from './users.controller';\nimport { UserService } from './providers/users.service';\nimport { AuthModule } from 'src/auth/auth.module';\n\n@Module({\n  controllers: [UsersController],\n  providers: [UserService],\n  exports: [UserService],\n  imports: [forwardRef(() => AuthModule)],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/providers/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/posts/dtos/create-post-meta-options.dto.ts\n            \n            class\n            CreatePostMetaOptionsDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/posts/dtos/create-post.dto.ts\n            \n            class\n            CreatePostDto\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/posts/dtos/patch-post.dto.ts\n            \n            class\n            PatchPostDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/posts/posts.controller.ts\n            \n            controller\n            PostsController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/posts/providers/posts.service.ts\n            \n            injectable\n            PostsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/dtos/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/dtos/get-users-param.dto.ts\n            \n            class\n            GetUsersParamDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/dtos/patch-user.dto.ts\n            \n            class\n            PatchUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/providers/users.service.ts\n            \n            injectable\n            UserService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.23\n        \n            @nestjs/common : ^11.0.1\n        \n            @nestjs/core : ^11.0.1\n        \n            @nestjs/mapped-types : ^2.0.5\n        \n            @nestjs/platform-express : ^11.0.1\n        \n            @nestjs/swagger : ^7.3.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            postStatus   (src/.../postStatus.enum.ts)\n                        \n                        \n                            postType   (src/.../postType.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/posts/enums/postStatus.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        postStatus\n                    \n                \n                        \n                            \n                                 DRAFT\n                            \n                        \n                        \n                            \n                                Value : draft\n                            \n                        \n                        \n                            \n                                 SCHEDULED\n                            \n                        \n                        \n                            \n                                Value : scheduled\n                            \n                        \n                        \n                            \n                                 REVIEW\n                            \n                        \n                        \n                            \n                                Value : review\n                            \n                        \n                        \n                            \n                                 PUBLISHED\n                            \n                        \n                        \n                            \n                                Value : published\n                            \n                        \n            \n        \n\n    src/posts/enums/postType.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        postType\n                    \n                \n                        \n                            \n                                 POST\n                            \n                        \n                        \n                            \n                                Value : post\n                            \n                        \n                        \n                            \n                                 PAGE\n                            \n                        \n                        \n                            \n                                Value : page\n                            \n                        \n                        \n                            \n                                 STORY\n                            \n                        \n                        \n                            \n                                Value : story\n                            \n                        \n                        \n                            \n                                 SERIES\n                            \n                        \n                        \n                            \n                                Value : series\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ npm install -g mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PostsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_PostsModule\n\n\n\ncluster_PostsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nPostsModule\n\nPostsModule\n\nAppModule -->\n\nPostsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nPostsModule -->\n\nUsersModule->PostsModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUsersModule->UserService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nPostsService\n\nPostsService\n\nPostsModule -->\n\nPostsService->PostsModule\n\n\n\n\n\nUserService\n\nUserService\n\nUsersModule -->\n\nUserService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
